apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.postgres.labels.app }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.postgres.labels.app }}
  serviceName: {{ .Values.postgres.labels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.labels.app }}
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.postgres.service.port }}
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgres.env.POSTGRES_USER }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.env.POSTGRES_PASSWORD }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.env.POSTGRES_DB }}
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.postgres.persistence.size }}
        storageClassName: {{ .Values.postgres.persistence.storageClass }}
